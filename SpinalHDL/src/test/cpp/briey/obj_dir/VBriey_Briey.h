// Verilated -*- C++ -*-
// DESCRIPTION: Verilator output: Design internal header
// See VBriey.h for the primary calling header

#ifndef _VBriey_Briey_H_
#define _VBriey_Briey_H_

#include "verilated_heavy.h"
#include "VBriey__Dpi.h"

class VBriey__Syms;
class VBriey_VexRiscv;

//----------

VL_MODULE(VBriey_Briey) {
  public:
    // CELLS
    VBriey_VexRiscv*   	axi_core_cpu;
    
    // PORTS
    // Begin mtask footprint  all: 
    VL_IN8(io_axiClk,0,0);
    VL_IN8(io_jtag_tck,0,0);
    VL_IN8(io_asyncReset,0,0);
    VL_IN8(io_vgaClk,0,0);
    VL_IN8(io_jtag_tms,0,0);
    VL_IN8(io_jtag_tdi,0,0);
    VL_OUT8(io_jtag_tdo,0,0);
    VL_OUT8(io_sdram_BA,1,0);
    VL_OUT8(io_sdram_DQ_writeEnable,0,0);
    VL_OUT8(io_sdram_DQM,1,0);
    VL_OUT8(io_sdram_CASn,0,0);
    VL_OUT8(io_sdram_CKE,0,0);
    VL_OUT8(io_sdram_CSn,0,0);
    VL_OUT8(io_sdram_RASn,0,0);
    VL_OUT8(io_sdram_WEn,0,0);
    VL_OUT8(io_uart_txd,0,0);
    VL_IN8(io_uart_rxd,0,0);
    VL_OUT8(io_vga_hSync,0,0);
    VL_OUT8(io_vga_vSync,0,0);
    VL_OUT8(io_vga_rgb_0,4,0);
    VL_OUT8(io_vga_rgb_1,5,0);
    VL_OUT8(io_vga_rgb_2,4,0);
    VL_OUT8(io_vga_colorEn,0,0);
    VL_OUT8(io_vga_videoClock,0,0);
    VL_IN8(io_timerExternal_clear,0,0);
    VL_IN8(io_timerExternal_tick,0,0);
    VL_IN8(io_coreInterrupt,0,0);
    VL_OUT16(io_sdram_ADDR,12,0);
    VL_IN16(io_sdram_DQ_read,15,0);
    VL_OUT16(io_sdram_DQ_write,15,0);
    VL_IN(io_gpioA_read,31,0);
    VL_OUT(io_gpioA_write,31,0);
    VL_OUT(io_gpioA_writeEnable,31,0);
    VL_IN(io_gpioB_read,31,0);
    VL_OUT(io_gpioB_write,31,0);
    VL_OUT(io_gpioB_writeEnable,31,0);
    
    // LOCAL SIGNALS
    // Anonymous structures to workaround compiler member-count bugs
    struct {
	// Begin mtask footprint  all: 
	VL_SIG8(__PVT__resetCtrl_systemReset,0,0);
	VL_SIG8(__PVT__resetCtrl_axiReset,0,0);
	VL_SIG8(__PVT___zz_93_,0,0);
	VL_SIG8(__PVT___zz_95_,0,0);
	VL_SIG8(__PVT___zz_96_,0,0);
	VL_SIG8(__PVT___zz_97_,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arw_ready,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_r_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arw_ready,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arw_ready,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_w_ready,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_b_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_r_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_apb_PSEL,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_apb_PENABLE,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arw_ready,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_w_ready,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_b_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_r_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_ar_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_ar_payload_len,7,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_r_ready,0,0);
	VL_SIG8(__PVT__streamFork_5___05Fio_input_ready,0,0);
	VL_SIG8(__PVT__streamFork_5___05Fio_outputs_0_valid,0,0);
	VL_SIG8(__PVT__streamFork_5___05Fio_outputs_1_valid,0,0);
	VL_SIG8(__PVT__systemDebugger_1___05Fio_mem_cmd_valid,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder_io_input_ar_ready,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder_io_input_r_valid,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder_io_input_r_payload_resp,1,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder_io_input_r_payload_last,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder_io_input_arw_ready,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder_io_input_w_ready,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder_io_input_b_valid,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder_io_input_r_valid,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder_io_input_r_payload_resp,1,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder_io_input_r_payload_last,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder_io_input_ar_ready,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder_io_input_r_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder_io_input_r_payload_last,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_w_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_w_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter_io_output_w_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter_io_output_w_valid,0,0);
	VL_SIG8(__PVT__io_apb_decoder_io_input_PREADY,0,0);
	VL_SIG8(__PVT__io_apb_decoder_io_input_PSLVERROR,0,0);
	VL_SIG8(__PVT__io_apb_decoder_io_output_PSEL,3,0);
	VL_SIG8(__PVT___zz_125_,0,0);
	VL_SIG8(__PVT___zz_127_,0,0);
	VL_SIG8(__PVT___zz_128_,0,0);
	VL_SIG8(__PVT___zz_129_,0,0);
	VL_SIG8(__PVT___zz_130_,0,0);
	VL_SIG8(__PVT___zz_131_,0,0);
	VL_SIG8(__PVT___zz_132_,0,0);
	VL_SIG8(__PVT___zz_133_,0,0);
	VL_SIG8(__PVT___zz_134_,0,0);
	VL_SIG8(__PVT__resetCtrl_systemResetUnbuffered,0,0);
	VL_SIG8(__PVT__resetCtrl_systemResetCounter,5,0);
	VL_SIG8(__PVT___zz_6_,0,0);
	VL_SIG8(__PVT___zz_7_,0,0);
	VL_SIG8(__PVT___zz_8_,2,0);
	VL_SIG8(__PVT___zz_10_,2,0);
	VL_SIG8(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_ready,0,0);
	VL_SIG8(__PVT___zz_11_,0,0);
	VL_SIG8(__PVT___zz_12_,0,0);
    };
    struct {
	VL_SIG8(__PVT___zz_15_,3,0);
	VL_SIG8(__PVT___zz_16_,2,0);
	VL_SIG8(__PVT___zz_17_,0,0);
	VL_SIG8(__PVT___zz_18_,0,0);
	VL_SIG8(__PVT___zz_19_,0,0);
	VL_SIG8(__PVT___zz_22_,3,0);
	VL_SIG8(__PVT___zz_23_,2,0);
	VL_SIG8(__PVT___zz_24_,0,0);
	VL_SIG8(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_m2sPipe_s2mPipe_ready,0,0);
	VL_SIG8(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_m2sPipe_s2mPipe_payload_wr,0,0);
	VL_SIG8(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_m2sPipe_s2mPipe_payload_mask,3,0);
	VL_SIG8(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_m2sPipe_s2mPipe_payload_length,2,0);
	VL_SIG8(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_m2sPipe_s2mPipe_payload_last,0,0);
	VL_SIG8(__PVT___zz_25_,0,0);
	VL_SIG8(__PVT___zz_26_,0,0);
	VL_SIG8(__PVT___zz_29_,3,0);
	VL_SIG8(__PVT___zz_30_,2,0);
	VL_SIG8(__PVT___zz_31_,0,0);
	VL_SIG8(__PVT___zz_32_,0,0);
	VL_SIG8(__PVT___zz_33_,0,0);
	VL_SIG8(__PVT___zz_34_,0,0);
	VL_SIG8(__PVT___zz_35_,0,0);
	VL_SIG8(__PVT__axi_core_cpu_debug_resetOut_regNext,0,0);
	VL_SIG8(__PVT___zz_36_,0,0);
	VL_SIG8(__PVT___zz_37_,0,0);
	VL_SIG8(__PVT___zz_39_,0,0);
	VL_SIG8(__PVT___zz_40_,0,0);
	VL_SIG8(__PVT___zz_42_,0,0);
	VL_SIG8(__PVT___zz_43_,0,0);
	VL_SIG8(__PVT___zz_45_,0,0);
	VL_SIG8(__PVT___zz_46_,0,0);
	VL_SIG8(__PVT___zz_48_,0,0);
	VL_SIG8(__PVT___zz_49_,0,0);
	VL_SIG8(__PVT___zz_51_,0,0);
	VL_SIG8(__PVT___zz_52_,0,0);
	VL_SIG8(__PVT___zz_54_,0,0);
	VL_SIG8(__PVT___zz_55_,0,0);
	VL_SIG8(__PVT___zz_57_,1,0);
	VL_SIG8(__PVT___zz_59_,0,0);
	VL_SIG8(__PVT___zz_61_,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_ar_halfPipe_regs_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_ar_halfPipe_regs_payload_len,7,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_ar_halfPipe_regs_payload_size,2,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_valid,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_ready,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_id,3,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_len,7,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_size,2,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_burst,1,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_write,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter_io_output_w_s2mPipe_ready,0,0);
	VL_SIG8(__PVT___zz_64_,0,0);
	VL_SIG8(__PVT___zz_66_,3,0);
	VL_SIG8(__PVT___zz_68_,0,0);
	VL_SIG8(__PVT___zz_70_,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_len,7,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_size,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_burst,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_write,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_w_s2mPipe_ready,0,0);
	VL_SIG8(__PVT___zz_75_,0,0);
    };
    struct {
	VL_SIG8(__PVT___zz_77_,3,0);
	VL_SIG8(__PVT___zz_79_,0,0);
	VL_SIG8(__PVT___zz_81_,3,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter_io_output_arw_halfPipe_regs_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter_io_output_arw_halfPipe_regs_ready,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_write,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter_io_output_w_halfPipe_regs_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter_io_output_w_halfPipe_regs_ready,0,0);
	VL_SIG8(__PVT__bufferCC_8___DOT__buffers_0,0,0);
	VL_SIG8(__PVT__bufferCC_8___DOT__buffers_1,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__arw_valid,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__arw_ready,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__arw_payload_fragment_write,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__unburstify_buffer_valid,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__unburstify_buffer_len,7,0);
	VL_SIG8(__PVT__axi_ram__DOT__unburstify_buffer_beat,7,0);
	VL_SIG8(__PVT__axi_ram__DOT__unburstify_buffer_transaction_id,3,0);
	VL_SIG8(__PVT__axi_ram__DOT__unburstify_buffer_transaction_size,2,0);
	VL_SIG8(__PVT__axi_ram__DOT__unburstify_buffer_transaction_burst,1,0);
	VL_SIG8(__PVT__axi_ram__DOT__unburstify_buffer_transaction_write,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__Axi4Incr_wrapCase,2,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__stage0_valid,0,0);
	VL_SIG8(__PVT__axi_ram__DOT__stage0_ready,0,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_4_,0,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_6_,0,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_7_,0,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_9_,3,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_12_,0,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_22_,7,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_23_,7,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_24_,7,0);
	VL_SIG8(__PVT__axi_ram__DOT___zz_25_,7,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_17_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl_io_bus_cmd_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrlBusAdapted_rsp_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_3_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_5_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_6_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_7_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__bridge_result_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__bridge_result_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__bridge_result_payload_last,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__bridge_result_payload_fragment_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__bridge_result_payload_fragment_write,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_len,7,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_beat,7,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_transaction_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_transaction_size,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_transaction_burst,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_transaction_write,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__Axi4Incr_wrapCase,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_10_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__bridge_axiCmd_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__bridge_axiCmd_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT___zz_11_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_27_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo_io_pop_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo_io_pop_payload_context_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo_io_pop_payload_context_last,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_31_,0,0);
    };
    struct {
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_32_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__refresh_pending,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__powerup_done,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_0_active,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_1_active,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_2_active,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_3_active,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_rsp_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_rsp_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_rsp_payload_task,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_state,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_bootRefreshCounter_willIncrement,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_bootRefreshCounter_valueNext,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_bootRefreshCounter_value,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_cmd_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_9_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_10_,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_11_,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_14_,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_15_,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_16_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_rsp_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_insertBubble,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_read_counter,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_read_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_write_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_write_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_0_precharge_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_0_precharge_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_0_active_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_0_active_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_1_precharge_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_1_precharge_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_1_active_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_1_active_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_2_precharge_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_2_precharge_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_2_active_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_2_active_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_3_precharge_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_3_precharge_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_3_active_counter,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__bubbleInserter_timings_banks_3_active_busy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_BA,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_DQ_writeEnable,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_DQM,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_CASn,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_CKE,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_CSn,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_RASn,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_WEn,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_19_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_20_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_21_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_22_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_23_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_24_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_1_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_1_last,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_2_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_2_last,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_3_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_3_last,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_4_id,3,0);
    };
    struct {
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_cmd_payload_context_delay_4_last,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_contextDelayed_id,3,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_contextDelayed_last,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdramCkeNext,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdramCkeInternal,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdramCkeInternal_regNext,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__pushPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__pushPtr_valueNext,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__pushPtr_value,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__popPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__popPtr_valueNext,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__popPtr_value,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__ptrMatch,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__risingOccupancy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__empty,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__pushing,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__popping,0,0);
	VL_SIG8(__PVT__axi_apbBridge__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_apbBridge__DOT__phase,1,0);
	VL_SIG8(__PVT__axi_apbBridge__DOT__write,0,0);
	VL_SIG8(__PVT__axi_gpioACtrl__DOT__ctrl_doWrite,0,0);
	VL_SIG8(__PVT__axi_gpioBCtrl__DOT__ctrl_doWrite,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_11_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_12_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_13_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_14_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_15_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_16_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_17_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_18_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_19_,3,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_20_,3,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__prescaler_1___05Fio_overflow,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerA_io_full,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerB_io_full,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerC_io_full,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerD_io_full,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__interruptCtrl_1___05Fio_pendings,3,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__busCtrl_doWrite,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerABridge_ticksEnable,1,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerABridge_clearsEnable,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerABridge_busClearing,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_3_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_4_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerBBridge_ticksEnable,2,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerBBridge_clearsEnable,1,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerBBridge_busClearing,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_5_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_6_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerCBridge_ticksEnable,2,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerCBridge_clearsEnable,1,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerCBridge_busClearing,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_7_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_8_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerDBridge_ticksEnable,2,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerDBridge_clearsEnable,1,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerDBridge_busClearing,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_9_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT___zz_10_,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__interruptCtrl_1___05Fio_masks_driver,3,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__bufferCC_8___DOT__buffers_0_clear,0,0);
    };
    struct {
	VL_SIG8(__PVT__axi_timerCtrl__DOT__bufferCC_8___DOT__buffers_0_tick,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__bufferCC_8___DOT__buffers_1_clear,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__bufferCC_8___DOT__buffers_1_tick,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerA__DOT__limitHit,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerA__DOT__inhibitFull,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerB__DOT__limitHit,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerB__DOT__inhibitFull,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerC__DOT__limitHit,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerC__DOT__inhibitFull,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerD__DOT__limitHit,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__timerD__DOT__inhibitFull,0,0);
	VL_SIG8(__PVT__axi_timerCtrl__DOT__interruptCtrl_1___DOT__pendings,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT___zz_6_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy_io_pop_valid,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy_io_pop_valid,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__busCtrl_doWrite,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_uartConfigReg_frame_dataLength,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_uartConfigReg_frame_stop,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_uartConfigReg_frame_parity,1,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_interruptCtrl_writeIntEnable,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_interruptCtrl_readIntEnable,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_interruptCtrl_readInt,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_interruptCtrl_writeInt,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx_io_write_ready,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__clockDivider_tick,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__clockDivider_counter_willIncrement,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__clockDivider_counter_valueNext,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__clockDivider_counter_value,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__clockDivider_willOverflow,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__tickCounter_value,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__stateMachine_state,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__stateMachine_parity,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__stateMachine_txd,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__stateMachine_txd_regNext,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT___zz_3_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT___zz_6_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT___zz_7_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT___zz_8_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__sampler_samples_1,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__sampler_samples_2,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__sampler_samples_3,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__sampler_samples_4,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__sampler_value,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__sampler_tick,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__bitTimer_counter,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__bitTimer_tick,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__bitCounter_value,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__stateMachine_state,2,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__stateMachine_parity,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__stateMachine_shifter,7,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__stateMachine_validReg,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__bufferCC_8___DOT__buffers_0,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__bufferCC_8___DOT__buffers_1,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT___zz_3_,7,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_pushPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_pushPtr_valueNext,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_pushPtr_value,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_popPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_popPtr_valueNext,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_popPtr_value,3,0);
    };
    struct {
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_ptrMatch,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_risingOccupancy,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_pushing,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_popping,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_full,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT___zz_3_,7,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_pushPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_pushPtr_valueNext,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_pushPtr_value,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_popPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_popPtr_valueNext,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_popPtr_value,3,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_ptrMatch,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_risingOccupancy,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_pushing,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_popping,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_full,0,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_3_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_4_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_10_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_14_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_19_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresCircle_io_setPixel,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__fillRect_io_ready,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__fillRect_io_setPixel,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT___zz_21_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__storeColor_0,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__storeColor_1,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__storeColor_2,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__write,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__trigger,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__mode,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__counter,7,0);
	VL_SIG8(__PVT__axi_gpu__DOT__switchVGA,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__mcpState_readData_fsm_wantExit,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__mcpState_readData_fsm_stateReg,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__mcpState_readData_fsm_stateNext,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__mcpState_stateReg,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__mcpState_stateNext,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga_io_vga_videoOn,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__hSyncDelay,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vSyncDelay,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__videoOn,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT___zz_1_,1,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT___zz_2___05FregNext,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT__vgaArea_hEnd,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT__vgaArea_vEnd,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT__vgaArea_vSync,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT__vgaArea_hSync,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__buffer_2___DOT___zz_4_,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__buffer_2___DOT___zz_5_,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresLine__DOT__down,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresLine__DOT__right,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresLine__DOT__downTemp,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresLine__DOT__rightTemp,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresLine__DOT__breshamSM_stateReg,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresLine__DOT__breshamSM_stateNext,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__bresCircle__DOT__BreshamCircSM_stateReg,2,0);
    };
    struct {
	VL_SIG8(__PVT__axi_gpu__DOT__bresCircle__DOT__BreshamCircSM_stateNext,2,0);
	VL_SIG8(__PVT__axi_gpu__DOT__fillRect__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_gpu__DOT__fillRect__DOT__fill_stateReg,1,0);
	VL_SIG8(__PVT__axi_gpu__DOT__fillRect__DOT__fill_stateNext,1,0);
	VL_SIG8(__PVT__streamFork_5___DOT__linkEnable_0,0,0);
	VL_SIG8(__PVT__streamFork_5___DOT__linkEnable_1,0,0);
	VL_SIG8(__PVT__bufferCC_10___DOT__buffers_0,0,0);
	VL_SIG8(__PVT__bufferCC_10___DOT__buffers_1,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__system_rsp_valid,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__system_rsp_payload_error,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_tap_fsm_state,3,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT___zz_1_,3,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_tap_instruction,3,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_tap_instructionShift,3,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_tap_bypass,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_tap_tdoUnbufferd,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_tap_tdoUnbufferd_regNext,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_idcodeArea_instructionHit,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_writeArea_source_valid,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__jtag_readArea_instructionHit,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__inputArea_target,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__inputArea_data_last,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__inputArea_data_fragment,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__outputArea_hit,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__outputArea_flow_valid,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__outputArea_flow_m2sPipe_valid,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__outputArea_flow_m2sPipe_payload_last,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__outputArea_flow_m2sPipe_payload_fragment,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__bufferCC_8___DOT__buffers_0,0,0);
	VL_SIG8(__PVT__jtagBridge_1___DOT__flowCCByToggle_1___DOT__bufferCC_8___DOT__buffers_1,0,0);
	VL_SIG8(__PVT__systemDebugger_1___DOT___zz_2_,0,0);
	VL_SIG8(__PVT__systemDebugger_1___DOT__dispatcher_dataLoaded,0,0);
	VL_SIG8(__PVT__systemDebugger_1___DOT__dispatcher_headerShifter,7,0);
	VL_SIG8(__PVT__systemDebugger_1___DOT__dispatcher_headerLoaded,0,0);
	VL_SIG8(__PVT__systemDebugger_1___DOT__dispatcher_counter,2,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__pendingCmdCounter_incrementIt,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__pendingCmdCounter_decrementIt,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__pendingCmdCounter_valueNext,2,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__pendingCmdCounter_value,2,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__decodedCmdSels,1,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__pendingSels,1,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__pendingError,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__allowCmd,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__errorSlave__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__errorSlave__DOT__sendRsp,0,0);
	VL_SIG8(__PVT__axi_core_iBus_decoder__DOT__errorSlave__DOT__remaining,7,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT___zz_17_,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave_io_axi_arw_ready,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave_io_axi_w_ready,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave_io_axi_b_valid,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT___zz_1_,2,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT___zz_2_,2,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT___zz_3_,2,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__cmdAllowedStart,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__pendingCmdCounter,2,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__pendingDataCounter_incrementIt,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__pendingDataCounter_decrementIt,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__pendingDataCounter_valueNext,2,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__pendingDataCounter_value,2,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__decodedCmdSels,3,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__pendingSels,3,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__pendingError,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__allowCmd,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT___zz_5_,0,0);
    };
    struct {
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__readRspIndex,1,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave__DOT__consumeData,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave__DOT__sendReadRsp,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave__DOT__sendWriteRsp,0,0);
	VL_SIG8(__PVT__axi_core_dBus_decoder__DOT__errorSlave__DOT__remaining,7,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__pendingCmdCounter_incrementIt,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__pendingCmdCounter_decrementIt,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__pendingCmdCounter_valueNext,2,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__pendingCmdCounter_value,2,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__decodedCmdSels,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__pendingSels,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__pendingError,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__allowCmd,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__errorSlave__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__errorSlave__DOT__sendRsp,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axiram_decoder__DOT__errorSlave__DOT__remaining,7,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT___zz_4_,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter_io_inputs_0_ready,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter_io_inputs_1_ready,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter_io_output_valid,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter_io_output_payload_write,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFork_5___05Fio_input_ready,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFork_5___05Fio_outputs_0_valid,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFork_5___05Fio_outputs_1_valid,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___05Fio_pop_valid,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT___zz_2_,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT__locked,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT__maskLocked_0,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT__maskLocked_1,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT__maskRouted_0,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT__maskRouted_1,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_1_,1,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_3_,3,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_4_,1,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFork_5___DOT__linkEnable_0,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFork_5___DOT__linkEnable_1,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_value,1,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_value,1,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__ptrMatch,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__risingOccupancy,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__full,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushing,0,0);
	VL_SIG8(__PVT__axi_ram_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popping,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT___zz_6_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter_io_inputs_0_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter_io_inputs_1_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter_io_inputs_2_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter_io_output_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter_io_chosenOH,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFork_5___05Fio_input_ready,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFork_5___05Fio_outputs_0_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFork_5___05Fio_outputs_1_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___05Fio_pop_valid,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT___zz_4_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_9_,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_12_,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_13_,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT__locked,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT__maskLocked_0,0,0);
    };
    struct {
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT__maskLocked_1,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT__maskLocked_2,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT__maskRouted_0,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT__maskRouted_1,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT__maskRouted_2,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_1_,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_3_,5,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_4_,2,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_5_,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFork_5___DOT__linkEnable_0,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFork_5___DOT__linkEnable_1,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_value,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_value,1,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__ptrMatch,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__risingOccupancy,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__full,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushing,0,0);
	VL_SIG8(__PVT__axi_sdramCtrl_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popping,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT___zz_3_,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__cmdArbiter_io_inputs_0_ready,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__cmdArbiter_io_output_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFork_5___05Fio_input_ready,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFork_5___05Fio_outputs_0_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFork_5___05Fio_outputs_1_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___05Fio_pop_valid,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__cmdArbiter__DOT__locked,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__cmdArbiter__DOT__maskLocked_0,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__cmdArbiter__DOT__maskRouted_0,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__cmdArbiter__DOT___zz_3_,1,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFork_5___DOT__linkEnable_0,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFork_5___DOT__linkEnable_1,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_value,1,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_value,1,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__ptrMatch,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__risingOccupancy,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__full,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__pushing,0,0);
	VL_SIG8(__PVT__axi_apbBridge_io_axi_arbiter__DOT__streamFifoLowLatency_5___DOT__popping,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT___zz_3_,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__cmdArbiter_io_inputs_0_ready,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__cmdArbiter_io_output_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFork_5___05Fio_input_ready,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFork_5___05Fio_outputs_0_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFork_5___05Fio_outputs_1_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___05Fio_pop_valid,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__cmdArbiter__DOT__locked,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__cmdArbiter__DOT__maskLocked_0,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__cmdArbiter__DOT__maskRouted_0,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__cmdArbiter__DOT___zz_3_,1,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFork_5___DOT__linkEnable_0,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFork_5___DOT__linkEnable_1,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__pushPtr_value,1,0);
    };
    struct {
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_willIncrement,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_valueNext,1,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__popPtr_value,1,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__ptrMatch,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__risingOccupancy,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__full,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__pushing,0,0);
	VL_SIG8(__PVT__axi_gpu_io_axicpu_arbiter__DOT__streamFifoLowLatency_5___DOT__popping,0,0);
	VL_SIG8(__PVT__io_apb_decoder__DOT___zz_1_,0,0);
	VL_SIG8(__PVT__apb3Router_1___DOT__selIndex,1,0);
	VL_SIG16(__PVT__axi_ram_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_addr,11,0);
	VL_SIG16(__PVT__axi_ram__DOT__arw_payload_fragment_addr,11,0);
	VL_SIG16(__PVT__axi_ram__DOT__unburstify_buffer_transaction_addr,11,0);
	VL_SIG16(__PVT__axi_ram__DOT__unburstify_buffer_result,11,0);
	VL_SIG16(__PVT__axi_ram__DOT__Axi4Incr_base,11,0);
	VL_SIG16(__PVT__axi_ram__DOT__Axi4Incr_baseIncr,11,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl_io_bus_rsp_payload_data_regNextWhen,15,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__Axi4Incr_base,11,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__Axi4Incr_baseIncr,11,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo_io_pop_payload_data,15,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__refresh_counter_valueNext,9,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__refresh_counter_value,9,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__powerup_counter,13,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_0_row,12,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_1_row,12,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_2_row,12,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_banks_3_row,12,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_rsp_payload_rowColumn,12,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_12_,12,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT___zz_13_,15,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_ADDR,12,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_DQ_read,15,0);
	VL_SIG16(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_sdram_DQ_write,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT___zz_1_,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT__timerB_io_limit_driver,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT__timerC_io_limit_driver,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT__timerD_io_limit_driver,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT__prescaler_1___DOT__counter,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT__timerB__DOT__counter,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT__timerC__DOT__counter,15,0);
	VL_SIG16(__PVT__axi_timerCtrl__DOT__timerD__DOT__counter,15,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_6_,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_7_,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_8_,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_9_,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_11_,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_12_,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_13_,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_15_,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_16_,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_17_,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT___zz_18_,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresCircle_io_address_0,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresCircle_io_address_1,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT__storeVals1_0,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__storeVals1_1,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT__storeVals2_0,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__storeVals2_1,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT__storeRadius,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT__vgaArea_hCounter,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__vga__DOT__vga__DOT__vgaArea_vCounter,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresLine__DOT___zz_7_,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresLine__DOT__dx,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresLine__DOT__dy,9,0);
    };
    struct {
	VL_SIG16(__PVT__axi_gpu__DOT__bresLine__DOT__x,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresLine__DOT__x2,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresLine__DOT__y,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresLine__DOT__y2,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresCircle__DOT__x,11,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresCircle__DOT__y,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresCircle__DOT__x1,10,0);
	VL_SIG16(__PVT__axi_gpu__DOT__bresCircle__DOT__y1,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__fillRect__DOT__counterX,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__fillRect__DOT__counterY,8,0);
	VL_SIG16(__PVT__axi_gpu__DOT__fillRect__DOT__x1,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__fillRect__DOT__x2,9,0);
	VL_SIG16(__PVT__axi_gpu__DOT__fillRect__DOT__y2,8,0);
	VL_SIG(__PVT__axi_gpioACtrl_io_apb_PRDATA,31,0);
	VL_SIG(__PVT__axi_gpioBCtrl_io_apb_PRDATA,31,0);
	VL_SIG(__PVT__axi_timerCtrl_io_apb_PRDATA,31,0);
	VL_SIG(__PVT__axi_uartCtrl_io_apb_PRDATA,31,0);
	VL_SIG(__PVT___zz_13_,31,0);
	VL_SIG(__PVT___zz_14_,31,0);
	VL_SIG(__PVT___zz_20_,31,0);
	VL_SIG(__PVT___zz_21_,31,0);
	VL_SIG(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_m2sPipe_s2mPipe_payload_address,31,0);
	VL_SIG(__PVT__axi_core_cpu_dBus_cmd_m2sPipe_m2sPipe_s2mPipe_payload_data,31,0);
	VL_SIG(__PVT___zz_27_,31,0);
	VL_SIG(__PVT___zz_28_,31,0);
	VL_SIG(__PVT___zz_56_,31,0);
	VL_SIG(__PVT__axi_gpu_io_axiram_ar_halfPipe_regs_payload_addr,31,0);
	VL_SIG(__PVT___zz_65_,31,0);
	VL_SIG(__PVT___zz_69_,31,0);
	VL_SIG(__PVT__axi_sdramCtrl_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_addr,25,0);
	VL_SIG(__PVT___zz_76_,31,0);
	VL_SIG(__PVT___zz_80_,31,0);
	VL_SIG(__PVT__axi_apbBridge_io_axi_arbiter_io_output_arw_halfPipe_regs_payload_addr,19,0);
	VL_SIG(__PVT__axi_apbBridge_io_axi_arbiter_io_output_w_halfPipe_regs_payload_data,31,0);
	VL_SIG(__PVT__axi_ram__DOT___zz_13_,31,0);
	VL_SIG(__PVT__axi_sdramCtrl__DOT___zz_14_,24,0);
	VL_SIG(__PVT__axi_sdramCtrl__DOT__ctrlBusAdapted_rsp_payload_data,31,0);
	VL_SIG(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_transaction_addr,25,0);
	VL_SIG(__PVT__axi_sdramCtrl__DOT__unburstify_buffer_result,25,0);
	VL_SIG(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT___zz_4_,20,0);
	VL_SIG(__PVT__axi_apbBridge__DOT__readedData,31,0);
	VL_SIG(__PVT__axi_gpioACtrl__DOT__io_gpio_write_driver,31,0);
	VL_SIG(__PVT__axi_gpioACtrl__DOT__io_gpio_writeEnable_driver,31,0);
	VL_SIG(__PVT__axi_gpioACtrl__DOT__bufferCC_8___DOT__buffers_0,31,0);
	VL_SIG(__PVT__axi_gpioACtrl__DOT__bufferCC_8___DOT__buffers_1,31,0);
	VL_SIG(__PVT__axi_gpioBCtrl__DOT__io_gpio_write_driver,31,0);
	VL_SIG(__PVT__axi_gpioBCtrl__DOT__io_gpio_writeEnable_driver,31,0);
	VL_SIG(__PVT__axi_gpioBCtrl__DOT__bufferCC_8___DOT__buffers_0,31,0);
	VL_SIG(__PVT__axi_gpioBCtrl__DOT__bufferCC_8___DOT__buffers_1,31,0);
	VL_SIG(__PVT__axi_timerCtrl__DOT__timerA_io_limit_driver,31,0);
	VL_SIG(__PVT__axi_timerCtrl__DOT__timerA__DOT__counter,31,0);
	VL_SIG(__PVT__axi_uartCtrl__DOT__bridge_uartConfigReg_clockDivider,19,0);
	VL_SIG(__PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__clockDivider_counter,19,0);
	VL_SIG(__PVT__axi_gpu__DOT___zz_5_,19,0);
	VL_SIG(__PVT__axi_gpu__DOT__address,31,0);
	VL_SIG(__PVT__axi_gpu__DOT__buffer_2_,31,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresLine__DOT___zz_11_,19,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresLine__DOT___zz_13_,19,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresLine__DOT__err,19,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresLine__DOT__e2,19,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresCircle__DOT___zz_37_,20,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresCircle__DOT___zz_39_,20,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresCircle__DOT___zz_45_,20,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresCircle__DOT___zz_48_,20,0);
    };
    struct {
	VL_SIG(__PVT__axi_gpu__DOT__bresCircle__DOT__err,20,0);
	VL_SIG(__PVT__axi_gpu__DOT__bresCircle__DOT__rTemp,20,0);
	VL_SIG(__PVT__jtagBridge_1___DOT__system_rsp_payload_data,31,0);
	VL_SIG(__PVT__jtagBridge_1___DOT__jtag_idcodeArea_shifter,31,0);
	VL_SIGW(__PVT__systemDebugger_1___DOT__dispatcher_dataShifter,66,0,3);
	VL_SIG(__PVT__apb3Router_1___DOT___zz_5_,31,0);
	VL_SIG64(__PVT__axi_gpu__DOT__alpha,63,0);
	VL_SIG64(__PVT__jtagBridge_1___DOT__jtag_readArea_shifter,33,0);
	VL_SIG8(__PVT__axi_ram__DOT__ram_symbol0[1024],7,0);
	VL_SIG8(__PVT__axi_ram__DOT__ram_symbol1[1024],7,0);
	VL_SIG8(__PVT__axi_ram__DOT__ram_symbol2[1024],7,0);
	VL_SIG8(__PVT__axi_ram__DOT__ram_symbol3[1024],7,0);
	VL_SIG(__PVT__axi_sdramCtrl__DOT__ctrl__DOT__chip_backupIn_fifo__DOT__ram[2],20,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__bridge_write_streamUnbuffered_queueWithOccupancy__DOT__logic_ram[16],7,0);
	VL_SIG8(__PVT__axi_uartCtrl__DOT__uartCtrl_1___05Fio_read_queueWithOccupancy__DOT__logic_ram[16],7,0);
	VL_SIG8(__PVT__axi_gpu__DOT__vga__DOT__buffer_2___DOT__bufferFrame[1048576],2,0);
    };
    
    // LOCAL VARIABLES
    // Begin mtask footprint  all: 
    VL_SIG8(__Vtableidx8,4,0);
    VL_SIG8(__Vtableidx9,6,0);
    VL_SIG8(__Vtableidx19,4,0);
    VL_SIG8(__Vtableidx20,4,0);
    VL_SIG8(__Vtableidx22,4,0);
    VL_SIG8(__Vtableidx28,3,0);
    VL_SIG8(__Vtableidx29,4,0);
    VL_SIG8(__Vtableidx30,3,0);
    VL_SIG8(__Vtableidx31,3,0);
    VL_SIG8(__Vtableidx32,3,0);
    VL_SIG8(__Vtableidx41,4,0);
    VL_SIG8(__Vdly__axi_ram__DOT__unburstify_buffer_beat,7,0);
    VL_SIG8(__Vdly__axi_sdramCtrl__DOT__unburstify_buffer_beat,7,0);
    VL_SIG8(__Vdly__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx__DOT__tickCounter_value,2,0);
    VL_SIG8(__Vdly__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__bitCounter_value,2,0);
    VL_SIG8(__Vdly__axi_uartCtrl__DOT__uartCtrl_1___DOT__rx__DOT__stateMachine_parity,0,0);
    VL_SIG8(__Vdly__axi_core_iBus_decoder__DOT__errorSlave__DOT__remaining,7,0);
    VL_SIG8(__Vdly__axi_core_dBus_decoder__DOT__errorSlave__DOT__remaining,7,0);
    VL_SIG8(__Vdly__axi_gpu_io_axiram_decoder__DOT__errorSlave__DOT__remaining,7,0);
    VL_SIG16(__Vtableidx10,8,0);
    VL_SIG16(__Vtableidx11,8,0);
    VL_SIG16(__Vtableidx12,8,0);
    VL_SIG16(__Vtableidx13,8,0);
    VL_SIG16(__Vtableidx14,8,0);
    VL_SIG16(__Vtableidx15,8,0);
    VL_SIG16(__Vtableidx16,8,0);
    VL_SIG16(__Vtableidx17,8,0);
    VL_SIG16(__Vtableidx18,8,0);
    VL_SIGW(__Vdly__systemDebugger_1___DOT__dispatcher_dataShifter,66,0,3);
    static VL_ST_SIG8(__Vtable8___PVT__axi_sdramCtrl__DOT__ctrl__DOT__frontend_rsp_valid[32],0,0);
    static VL_ST_SIG8(__Vtable9___PVT__axi_sdramCtrl__DOT__ctrl_io_bus_cmd_ready[128],0,0);
    static VL_ST_SIG8(__Vtable10___PVT__axi_timerCtrl__DOT___zz_2_[512],0,0);
    static VL_ST_SIG8(__Vtable11___PVT__axi_timerCtrl__DOT___zz_3_[512],0,0);
    static VL_ST_SIG8(__Vtable12___PVT__axi_timerCtrl__DOT___zz_4_[512],0,0);
    static VL_ST_SIG8(__Vtable13___PVT__axi_timerCtrl__DOT___zz_5_[512],0,0);
    static VL_ST_SIG8(__Vtable14___PVT__axi_timerCtrl__DOT___zz_6_[512],0,0);
    static VL_ST_SIG8(__Vtable15___PVT__axi_timerCtrl__DOT___zz_7_[512],0,0);
    static VL_ST_SIG8(__Vtable16___PVT__axi_timerCtrl__DOT___zz_8_[512],0,0);
    static VL_ST_SIG8(__Vtable17___PVT__axi_timerCtrl__DOT___zz_9_[512],0,0);
    static VL_ST_SIG8(__Vtable18___PVT__axi_timerCtrl__DOT___zz_10_[512],0,0);
    static VL_ST_SIG8(__Vtable19___PVT__axi_uartCtrl__DOT___zz_1_[32],0,0);
    static VL_ST_SIG8(__Vtable20___PVT__axi_uartCtrl__DOT___zz_6_[32],0,0);
    static VL_ST_SIG8(__Vtable22___PVT__axi_uartCtrl__DOT__uartCtrl_1___DOT__tx_io_write_ready[32],0,0);
    static VL_ST_SIG8(__Vtable28___PVT__axi_gpu_io_axicpu_arw_ready[16],0,0);
    static VL_ST_SIG8(__Vtable29___PVT__axi_gpu_io_axicpu_w_ready[32],0,0);
    static VL_ST_SIG8(__Vtable30___PVT__axi_gpu_io_axicpu_b_valid[16],0,0);
    static VL_ST_SIG8(__Vtable31___PVT__axi_gpu_io_axicpu_r_valid[16],0,0);
    static VL_ST_SIG8(__Vtable32___PVT__axi_gpu_io_axiram_r_ready[16],0,0);
    static VL_ST_SIG8(__Vtable41___PVT__jtagBridge_1___DOT___zz_1_[32],3,0);
    
    // INTERNAL VARIABLES
  private:
    VBriey__Syms* __VlSymsp;  // Symbol table
  public:
    
    // PARAMETERS
    
    // CONSTRUCTORS
  private:
    VL_UNCOPYABLE(VBriey_Briey);  ///< Copying not allowed
  public:
    VBriey_Briey(const char* name="TOP");
    ~VBriey_Briey();
    
    // API METHODS
    
    // INTERNAL METHODS
    void __Vconfigure(VBriey__Syms* symsp, bool first);
    static void _combo__TOP__Briey__12(VBriey__Syms* __restrict vlSymsp);
  private:
    void _ctor_var_reset();
  public:
    static void _initial__TOP__Briey__1(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__10(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__11(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__13(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__15(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__16(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__17(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__18(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__19(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__4(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__5(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__6(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__7(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__8(VBriey__Syms* __restrict vlSymsp);
    static void _sequent__TOP__Briey__9(VBriey__Syms* __restrict vlSymsp);
    static void _settle__TOP__Briey__14(VBriey__Syms* __restrict vlSymsp);
    static void _settle__TOP__Briey__2(VBriey__Syms* __restrict vlSymsp);
    static void _settle__TOP__Briey__3(VBriey__Syms* __restrict vlSymsp);
} VL_ATTR_ALIGNED(128);

#endif // guard
